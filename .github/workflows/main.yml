name: Docker CI/CD Pipeline

on:
  push:
    branches: [main, dev]  # Triggers on both branches

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Image Version
        id: versioning
        run: |
          VERSION=$(TZ=Asia/Kolkata date +'%Y%m%d%H%M%S')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/node-js:${{ github.ref_name }}-latest
            ${{ secrets.DOCKER_USERNAME }}/node-js:${{ github.ref_name }}-${{ env.VERSION }}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            BRANCH="${{ github.ref_name }}"
            CONTAINER_NAME="aita_container"
            PORT=80

            if [ "$BRANCH" = "dev" ]; then
              CONTAINER_NAME="aita_container_dev"
              PORT=8080
            fi

            echo "Stopping and removing existing container if it exists..."
            if docker ps -aq --filter "name=$CONTAINER_NAME" | grep -q .; then
              docker stop $CONTAINER_NAME
              docker rm $CONTAINER_NAME
            fi

            echo "Pulling latest Docker image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/node-js:${BRANCH}-${{ env.VERSION }}

            echo "Running new container..."
            docker run -d --name $CONTAINER_NAME -p $PORT:80 --restart unless-stopped \
              ${{ secrets.DOCKER_USERNAME }}/node-js:${BRANCH}-${{ env.VERSION }}

      - name: Push latest changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .  # Add any changes if necessary
          git commit -m "CI: Updated Docker image version" || echo "No changes to commit"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/Hari-17-poorani/branch_repo_td.git ${{ github.ref_name }}
