name: Docker CI/CD Pipeline

on:
  push:
    branches: [main, dev]  # Triggers on both branches

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref_name }}  # Checks out the branch that triggered the workflow

      - name: Pull latest changes
        run: git pull origin ${{ github.ref_name }}

      - name: Set up Docker Image Version
        id: versioning
        run: |
          VERSION=$( TZ=Asia/Kolkata date +'%Y%m%d%H%M%S') # Generates a timestamp-based version
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and Push Docker Image (Main Branch)
      - name: Build and Push Docker Image (Main Branch)
        if: github.ref_name == 'main'
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/node-js:latest
            ${{ secrets.DOCKER_USERNAME }}/node-js:main-${{ env.VERSION }}

      # Build and Push Docker Image (Dev Branch)
      - name: Build and Push Docker Image (Dev Branch)
        if: github.ref_name == 'dev'
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/node-js:dev-latest
            ${{ secrets.DOCKER_USERNAME }}/node-js:dev-${{ env.VERSION }}

      # Deploy to EC2 (Main Branch)
      - name: Deploy to EC2 (Main Branch)
        if: github.ref_name == 'main'
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            docker stop aita_container || true
            docker rm aita_container || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/node-js:main-${{ env.VERSION }}
            docker run -d --name aita_container -p 80:80 ${{ secrets.DOCKER_USERNAME }}/node-js:main-${{ env.VERSION }}

      # Deploy to EC2 (Dev Branch)
      - name: Deploy to EC2 (Dev Branch)
        if: github.ref_name == 'dev'
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            docker stop aita_container_dev || true
            docker rm aita_container_dev || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/node-js:dev-${{ env.VERSION }}
            docker run -d --name aita_container_dev -p 8080:80 ${{ secrets.DOCKER_USERNAME }}/node-js:dev-${{ env.VERSION }}

      # Push latest changes (Main and Dev Branches)
      - name: Push latest changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .  # Add any changes if necessary
          git commit -m "CI: Updated Docker image version" || echo "No changes to commit"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/Hari-17-poorani/main_repo3.git ${{ github.ref_name }}
